(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let check_current_user_follows ~_type ~ids =
    let open Lwt.Infix in
    let uri = Request.build_uri "/me/following/contains" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "type" Enums.show_type_0 _type in
    let uri = Request.add_query_param uri "ids" (fun x -> x) ids in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.to_bool) resp body

let follow_artists_users ~_type ~ids ~request_body () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/me/following" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "type" Enums.show_type_0 _type in
    let uri = Request.add_query_param uri "ids" (fun x -> x) ids in
    let body = Request.write_as_json_body (JsonSupport.of_map_of ) request_body in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let get_an_artist ~id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/artists/{id}" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Artist_object.of_yojson) resp body

let get_an_artists_albums ~id ?include_groups ?market ?(limit = 20l) ?(offset = 0l) () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/artists/{id}/albums" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.maybe_add_query_param uri "include_groups" (fun x -> x) include_groups in
    let uri = Request.maybe_add_query_param uri "market" (fun x -> x) market in
    let uri = Request.add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.add_query_param uri "offset" Int32.to_string offset in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Albums_paging_object.of_yojson) resp body

let get_an_artists_related_artists ~id =
    let open Lwt.Infix in
    let uri = Request.build_uri "/artists/{id}/related-artists" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_multiple_artists_200_response.of_yojson) resp body

let get_an_artists_top_tracks ~id ?market () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/artists/{id}/top-tracks" in
    let headers = Request.default_headers in
    let uri = Request.replace_path_param uri "id" (fun x -> x) id in
    let uri = Request.maybe_add_query_param uri "market" (fun x -> x) market in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_an_artists_top_tracks_200_response.of_yojson) resp body

let get_followed ~_type ?after ?(limit = 20l) () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/me/following" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "type" Enums.show_artistobject_type _type in
    let uri = Request.maybe_add_query_param uri "after" (fun x -> x) after in
    let uri = Request.add_query_param uri "limit" Int32.to_string limit in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_followed_200_response.of_yojson) resp body

let get_multiple_artists ~ids =
    let open Lwt.Infix in
    let uri = Request.build_uri "/artists" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "ids" (fun x -> x) ids in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Get_multiple_artists_200_response.of_yojson) resp body

let get_users_top_artists ?(time_range = "medium_term") ?(limit = 20l) ?(offset = 0l) () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/me/top/artists" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "time_range" (fun x -> x) time_range in
    let uri = Request.add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.add_query_param uri "offset" Int32.to_string offset in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Artists_paging_object.of_yojson) resp body

let unfollow_artists_users ~_type ~ids ~request_body () =
    let open Lwt.Infix in
    let uri = Request.build_uri "/me/following" in
    let headers = Request.default_headers in
    let uri = Request.add_query_param uri "type" Enums.show_type_0 _type in
    let uri = Request.add_query_param uri "ids" (fun x -> x) ids in
    let body = Request.write_as_json_body (JsonSupport.of_map_of ) request_body in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

